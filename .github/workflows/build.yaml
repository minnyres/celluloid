name: Build for Windows

on:
  push:

jobs:
  build-windows:
    name: Build
    runs-on: windows-latest
    env:
      install_path: "${{ github.workspace }}\\install"
      mpv_path: "${{ github.workspace }}\\mpv"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup devcmd
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - name: Install build tools
        run: |
          choco install ninja pkgconfiglite aria2

      - uses: msys2/setup-msys2@v2
        id: msys2
        with:
          msystem: UCRT64
          update: true
          install: mingw-w64-ucrt-x86_64-tools-git

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install Python Dependencies
        run: pip install meson

      - name: Setup a new (or from cache) vcpkg (and does not build any package)
        uses: lukka/run-vcpkg@v11 # Always specify the specific _version_ of the
                                  # action you need, `v11` in this case to stay up
                                  # to date with fixes on the v11 branch
        with:
          vcpkgGitCommitId: 'b02e341c927f16d991edbd915d8ea43eac52096c'
          vcpkgDirectory: C:/vcpkg

      - name: Install dependencies from vcpkg
        run: |
          # clear buildtrees after each package installation to reduce disk space requirements
          ${{ steps.msys2.outputs.msys2-location }}\usr\bin\sed.exe -i "s|1.3.2|1.7.0|" "${{ env.RUNVCPKG_VCPKG_ROOT }}/ports/libadwaita/vcpkg.json"
          ${{ steps.msys2.outputs.msys2-location }}\usr\bin\sed.exe -i "s/.*SHA512.*/    SHA512 8c94751422493a9e8ece45938d52e31a08f2b20d5dec5b21548c5ed387118ac216206f363e04be884ebb340777d4b1dd716bb7571d207596dbd1e5938412cbcd/" "${{ env.RUNVCPKG_VCPKG_ROOT }}/ports/libadwaita/portfile.cmake"
          $packages = `
            "glib:x64-windows-release",
            "gtk:x64-windows-release",
            "libadwaita:x64-windows-release",
            "libepoxy:x64-windows-release",
            "lua:x64-windows-release"
          ${{ env.RUNVCPKG_VCPKG_ROOT }}/vcpkg.exe upgrade `
            --no-dry-run
          ${{ env.RUNVCPKG_VCPKG_ROOT }}/vcpkg.exe install `
            --clean-after-build `
            --host-triplet=x64-windows-release `
            $packages

      - name: Install libmpv
        run: |
          mkdir -p mpv
          cd mpv
          aria2c https://github.com/shinchiro/mpv-winbuild-cmake/releases/download/20250330/mpv-dev-x86_64-20250330-git-5ba7ee5.7z
          7z x mpv-dev-x86_64-20250330-git-5ba7ee5.7z  
          ${{ steps.msys2.outputs.msys2-location }}\ucrt64\bin\gendef.exe libmpv-2.dll 
          lib /def:libmpv-2.def /out:libmpv.lib /MACHINE:X64
          mkdir -p lib/pkgconfig
          mv libmpv.lib lib
          echo "prefix=${{ env.mpv_path }}" > lib/pkgconfig/mpv.pc
          cat ${{ github.workspace }}/mpv.pc >> lib/pkgconfig/mpv.pc
          cat lib/pkgconfig/mpv.pc        
 
      - name: Build
        run: |
          $env:PKG_CONFIG_PATH="${{ env.RUNVCPKG_VCPKG_ROOT }}/installed/x64-windows-release/lib/pkgconfig;${{ env.mpv_path }}/lib/pkgconfig"    
          meson setup build --prefix=${{ env.install_path }} --buildtype release --strip -Dc_std="gnu11,c11"
          meson compile -C build
          meson install -C build